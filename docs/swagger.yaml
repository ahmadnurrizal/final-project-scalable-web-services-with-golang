definitions:
  models.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        example: rizalaja
        type: string
      password:
        example: password
        type: string
    required:
    - email
    - password
    type: object
  models.UserRegister:
    properties:
      age:
        example: 23
        type: integer
      email:
        example: rizalaja@gmail.com
        type: string
      password:
        example: password
        type: string
      username:
        example: rizalaja
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login for User
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLogin'
      summary: Login
      tags:
      - user
  /users:
    post:
      consumes:
      - application/json
      description: Add a new User
      parameters:
      - description: User Data
        in: body
        name: UserRegister
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Register User
      tags:
      - user
swagger: "2.0"
